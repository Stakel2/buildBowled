{"ast":null,"code":"import moment from \"moment\";\nimport reactImageSize from \"react-image-size\";\nimport { decode as base64_decode, encode as base64_encode } from \"base-64\";\nimport jwt from \"jsonwebtoken\"; // import CryptoJS from \"crypto-js\";\n\nconst ValidateImage = async _ref => {\n  let {\n    event,\n    wid,\n    hei\n  } = _ref;\n  const {\n    width,\n    height\n  } = await reactImageSize(event);\n\n  if (width === wid && height === hei) {\n    return true;\n  }\n\n  return false;\n};\n\n_c = ValidateImage;\n\nconst noExponents = function (num) {\n  var data = String(num).split(/[eE]/);\n  if (data.length == 1) return data[0];\n  var z = \"\",\n      sign = num < 0 ? \"-\" : \"\",\n      str = data[0].replace(\".\", \"\"),\n      mag = Number(data[1]) + 1;\n\n  if (mag < 0) {\n    z = sign + \"0.\";\n\n    while (mag++) z += \"0\";\n\n    return z + str.replace(/^\\-/, \"\");\n  }\n\n  mag -= str.length;\n\n  while (mag--) z += \"0\";\n\n  return str + z;\n};\n\nfunction calculateBal(bal) {\n  if (bal) {\n    let balll = bal > 0 ? (bal / 100000000).toFixed(8) : bal / 100000000;\n    let ball = balll.toString().match(/^-?\\d+(?:\\.\\d{0,6})?/)[0];\n    return ball == 0 ? \"00.00\" : noExponents(ball);\n  } else return \"00.00\";\n}\n\nconst formatDate = date => {\n  return moment(date).format(\"MMM, DD, yyyy hh:mm a\");\n};\n\nconst stampToDate = timeStamp => {\n  let date = new Date(timeStamp * 1000);\n  return formatDate(date);\n};\n\nconst limitCharacters = (text, count) => {\n  return (text === null || text === void 0 ? void 0 : text.length) > count ? (text === null || text === void 0 ? void 0 : text.slice(0, count)) + \"..\" : text;\n};\n\nconst getBase64 = text => {\n  return base64_encode(text);\n};\n\nconst jwtEncrypt = data => {\n  const payload = data;\n  const secret = \"v2MOBrlkiWGC\";\n  const token = jwt.sign(payload, secret, {\n    expiresIn: 36000\n  });\n\n  if (!token) {\n    console.log(\"not working...\");\n  } //console.log(\"token :: \", token);\n\n\n  const finalData = {\n    encrypting_token: token\n  };\n  return finalData;\n};\n\nconst jwtEncryptToken = data => {\n  let CryptoJS = require(\"crypto-js\");\n\n  let ciphertext = CryptoJS.AES.encrypt(data, \"v2MOBrlkiWGC\");\n  return ciphertext;\n};\n\nexport function requestEncryption(data) {\n  let CryptoJS = require(\"crypto-js\"); // // Encrypt\n  // let ciphertext = CryptoJS.AES.encrypt(data.toString(), \"v2MOBrlkiWGC\");\n  // // return ciphertext.toString();\n  // console.log(\"ciphertext--\", ciphertext);\n  // // Decrypt\n\n\n  var bytes = CryptoJS.AES.decrypt(data.toString(), \"v2MOBrlkiWGC\");\n  var plaintext = bytes.toString(CryptoJS.enc.Utf8);\n  console.log(\"plaintext--\", plaintext);\n}\nexport { ValidateImage, noExponents, formatDate, calculateBal, stampToDate, limitCharacters, jwtEncrypt, jwtEncryptToken };\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidateImage\");","map":{"version":3,"names":["moment","reactImageSize","decode","base64_decode","encode","base64_encode","jwt","ValidateImage","event","wid","hei","width","height","noExponents","num","data","String","split","length","z","sign","str","replace","mag","Number","calculateBal","bal","balll","toFixed","ball","toString","match","formatDate","date","format","stampToDate","timeStamp","Date","limitCharacters","text","count","slice","getBase64","jwtEncrypt","payload","secret","token","expiresIn","console","log","finalData","encrypting_token","jwtEncryptToken","CryptoJS","require","ciphertext","AES","encrypt","requestEncryption","bytes","decrypt","plaintext","enc","Utf8"],"sources":["/home/eagle/Projects/bouldl/src/utils/utils.js"],"sourcesContent":["import moment from \"moment\";\r\nimport reactImageSize from \"react-image-size\";\r\nimport { decode as base64_decode, encode as base64_encode } from \"base-64\";\r\nimport jwt from \"jsonwebtoken\";\r\n// import CryptoJS from \"crypto-js\";\r\n\r\nconst ValidateImage = async ({ event, wid, hei }) => {\r\n  const { width, height } = await reactImageSize(event);\r\n  if (width === wid && height === hei) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\nconst noExponents = function (num) {\r\n  var data = String(num).split(/[eE]/);\r\n  if (data.length == 1) return data[0];\r\n\r\n  var z = \"\",\r\n    sign = num < 0 ? \"-\" : \"\",\r\n    str = data[0].replace(\".\", \"\"),\r\n    mag = Number(data[1]) + 1;\r\n\r\n  if (mag < 0) {\r\n    z = sign + \"0.\";\r\n    while (mag++) z += \"0\";\r\n    return z + str.replace(/^\\-/, \"\");\r\n  }\r\n  mag -= str.length;\r\n  while (mag--) z += \"0\";\r\n  return str + z;\r\n};\r\n\r\nfunction calculateBal(bal) {\r\n  if (bal) {\r\n    let balll = bal > 0 ? (bal / 100000000).toFixed(8) : bal / 100000000;\r\n    let ball = balll.toString().match(/^-?\\d+(?:\\.\\d{0,6})?/)[0];\r\n    return ball == 0 ? \"00.00\" : noExponents(ball);\r\n  } else return \"00.00\";\r\n}\r\n\r\nconst formatDate = (date) => {\r\n  return moment(date).format(\"MMM, DD, yyyy hh:mm a\");\r\n};\r\n\r\nconst stampToDate = (timeStamp) => {\r\n  let date = new Date(timeStamp * 1000);\r\n  return formatDate(date);\r\n};\r\n\r\nconst limitCharacters = (text, count) => {\r\n  return text?.length > count ? text?.slice(0, count) + \"..\" : text;\r\n};\r\nconst getBase64 = (text) => {\r\n  return base64_encode(text);\r\n};\r\nconst jwtEncrypt = (data) => {\r\n  const payload = data;\r\n  const secret = \"v2MOBrlkiWGC\";\r\n  const token = jwt.sign(payload, secret, { expiresIn: 36000 });\r\n  if (!token) {\r\n    console.log(\"not working...\");\r\n  }\r\n  //console.log(\"token :: \", token);\r\n  const finalData = { encrypting_token: token };\r\n  return finalData;\r\n};\r\nconst jwtEncryptToken = (data) => {\r\n  let CryptoJS = require(\"crypto-js\");\r\n  let ciphertext = CryptoJS.AES.encrypt(data, \"v2MOBrlkiWGC\");\r\n  return ciphertext;\r\n};\r\nexport function requestEncryption(data) {\r\n  let CryptoJS = require(\"crypto-js\");\r\n  // // Encrypt\r\n  // let ciphertext = CryptoJS.AES.encrypt(data.toString(), \"v2MOBrlkiWGC\");\r\n  // // return ciphertext.toString();\r\n  // console.log(\"ciphertext--\", ciphertext);\r\n  // // Decrypt\r\n  var bytes = CryptoJS.AES.decrypt(data.toString(), \"v2MOBrlkiWGC\");\r\n  var plaintext = bytes.toString(CryptoJS.enc.Utf8);\r\n  console.log(\"plaintext--\", plaintext);\r\n}\r\n\r\nexport {\r\n  ValidateImage,\r\n  noExponents,\r\n  formatDate,\r\n  calculateBal,\r\n  stampToDate,\r\n  limitCharacters,\r\n  jwtEncrypt,\r\n  jwtEncryptToken,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}