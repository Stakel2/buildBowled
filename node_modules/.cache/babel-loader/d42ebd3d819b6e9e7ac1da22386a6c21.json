{"ast":null,"code":"var _jsxFileName = \"/home/eagle/Projects/bouldl/src/component/pages/public/resendVerification/resendVerification.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { HeaderSign, Layout, LoaderAnimated } from \"../../../common\";\nimport { userApiCallPost } from \"../../../../Axios/User\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport FormikControl from \"../../../common/FormikControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ResendVerification() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const initialValues = {\n    email: \"\",\n    passWord: \"\"\n  };\n  const validationSchema = Yup.object({\n    email: Yup.string().email(\"Email must be a valid Email\").required(\" Email address is required.\")\n  });\n\n  function onSubmit(value) {\n    const newData = {\n      email: value.email\n    };\n    setLoading(true);\n    userApiCallPost(\"/verification-email\", newData, {}, \"toastOn\").then(async res => {\n      console.log(res);\n      setLoading(false);\n      navigate(\"/login\");\n    }).catch(err => {\n      setLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LoaderAnimated, {\n      isLoading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner_pages_flow\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: 12,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rg_title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Resend Verification Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Enter your e-mail address and we'll send you a link to verify your email.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: initialValues,\n            validationSchema: validationSchema,\n            onSubmit: onSubmit,\n            children: formik => {\n              return /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(FormikControl, {\n                  className: \"east_form_input\",\n                  control: \"input\",\n                  label: \"Email*\",\n                  type: \"email\",\n                  placeholder: \"e.g. bowled@gmail.com\",\n                  name: \"email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: !(formik.isValid && formik.dirty),\n                  type: \"submit\",\n                  children: \"Send\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ResendVerification, \"DnY8KtHWiqG98vKbBdb88BioG/Y=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ResendVerification;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResendVerification\");","map":{"version":3,"names":["Form","Formik","React","useState","Button","Col","Container","Row","HeaderSign","Layout","LoaderAnimated","userApiCallPost","Link","useNavigate","Yup","FormikControl","ResendVerification","loading","setLoading","navigate","initialValues","email","passWord","validationSchema","object","string","required","onSubmit","value","newData","then","res","console","log","catch","err","formik","isValid","dirty"],"sources":["/home/eagle/Projects/bouldl/src/component/pages/public/resendVerification/resendVerification.js"],"sourcesContent":["import { Form, Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { HeaderSign, Layout, LoaderAnimated } from \"../../../common\";\nimport { userApiCallPost } from \"../../../../Axios/User\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport FormikControl from \"../../../common/FormikControl\";\n\nexport default function ResendVerification() {\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const initialValues = {\n    email: \"\",\n    passWord: \"\",\n  };\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .email(\"Email must be a valid Email\")\n      .required(\" Email address is required.\"),\n  });\n\n  function onSubmit(value) {\n    const newData = {\n      email: value.email,\n    };\n    setLoading(true);\n    userApiCallPost(\"/verification-email\", newData, {}, \"toastOn\")\n      .then(async (res) => {\n        console.log(res);\n        setLoading(false);\n        navigate(\"/login\");\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n  }\n\n  return (\n    <>\n         <LoaderAnimated isLoading={loading} />\n        <div className=\"inner_pages_flow\">\n        <Row>\n          <Col lg={12} >\n          <div className=\"rg_title\">\n                  <h2>Resend Verification Link</h2>\n            <p>\n              Enter your e-mail address and we'll send you a link to verify your\n              email.\n            </p>\n            </div>\n            <Formik\n              initialValues={initialValues}\n              validationSchema={validationSchema}\n              onSubmit={onSubmit}\n            >\n              {(formik) => {\n                return (\n                  <Form>\n                    <FormikControl\n                      className=\"east_form_input\"\n                      control=\"input\"\n                      label=\"Email*\"\n                      type=\"email\"\n                      placeholder=\"e.g. bowled@gmail.com\"\n                      name=\"email\"\n                    />\n\n                    <Button\n                      disabled={!(formik.isValid && formik.dirty)}\n                      type=\"submit\"\n                    >\n                      Send\n                    </Button>\n                  </Form>\n                );\n              }}\n            </Formik>\n          </Col>\n        </Row>\n        </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}