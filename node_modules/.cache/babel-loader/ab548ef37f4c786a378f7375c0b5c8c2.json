{"ast":null,"code":"var _jsxFileName = \"/home/eagle/Projects/bouldl/src/component/pages/private/Waitlist/WaitlistModal.js\",\n    _s = $RefreshSig$();\n\nimport { Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Col, Form, FormControl, FormGroup, Modal, Row } from \"react-bootstrap\";\nimport { userApiCallGet, userApiCallPost } from \"../../../../Axios/User\";\nimport { ModalCustom } from \"../../../common\";\nimport FormikControl from \"../../../common/FormikControl\";\nimport CustomModal from \"../../../common/modalCustom/CustomModal\";\nimport \"./Waitlist.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WaitlistModal = props => {\n  _s();\n\n  // const [count, setCount] = useState(0)\n  const [show, setShow] = useState(true);\n  const [email, setEmail] = useState(\"\");\n  const [waitListNo, setWaitListNo] = useState();\n  useEffect(() => {\n    handleShow();\n  }, []);\n\n  const getValidationState = () => {\n    const length = email.length;\n    if (length < 9) return 'error';\n  };\n\n  const onSubmit = () => {\n    let data = {\n      email: email\n    };\n    userApiCallPost(\"/newsletter/register\", data, {}, \"toastOn\").then(async data => {\n      console.log(\"data\", data.data);\n      setWaitListNo(data.data);\n      setShow(false);\n      setEmail(\"\"); // openShow();\n    }).catch(error => {\n      setShow(false);\n    });\n    console.log(\"email\", data);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const [joinshow, setJoinshow] = useState(false);\n\n  const croseClose = () => setJoinshow(false);\n\n  const openShow = () => setJoinshow(true);\n\n  localStorage.setItem(\"attempts\", 0);\n\n  const onCancel = () => {\n    userApiCallGet(\"/newsletter/close\").then(async data => {\n      console.log(\"data\", data.data);\n      setShow(false);\n    }).catch(error => {\n      setShow(false);\n    }); //   var attempts = parseInt(localStorage.getItem(\"attempts\"));\n    //   localStorage.setItem(\"count\", ++attempts);\n    //   console.log(attempts);\n    //  setCount(attempts)\n    // debugger;\n  }; // console.log(\"count\",count)\n  // localStorage.setItem(\"count\",count);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CustomModal, {\n      show: show,\n      onHide: onCancel,\n      centered: true,\n      size: \"md\",\n      title: \"JOIN THE WAITLIST\",\n      ...props,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: 12,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Wait_Email\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"containt\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"To get the early access benefits\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"groupForm\",\n                  controlId: \"id\",\n                  validationState: getValidationState,\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"email\",\n                    label: \"Email ID\",\n                    placeholder: \" Enter email Address\",\n                    value: email,\n                    onChange: e => setEmail(e.target.value),\n                    required: true,\n                    id: \"formControlsEmail\" // isInvalid={\"kk\"} /                                    \n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  disabled: email === \"\",\n                  onClick: onSubmit //    type=\"button\"\n                  ,\n                  className: \"confbtn\",\n                  children: \"Confirm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomModal, {\n      show: joinshow,\n      onHide: croseClose,\n      centered: true,\n      size: \"md\",\n      title: \"YOU ARE AWESOME, SERIOUSLY!\",\n      ...props,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Wait_Email\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"containt\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"You have joined the community of\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this), \" \", waitListNo, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 39\n                }, this), \"other members\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              onClick: croseClose,\n              className: \"confbtn\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(WaitlistModal, \"E13ml0eqcfGo0fQGncDu2O4mIjc=\");\n\n_c = WaitlistModal;\nexport default WaitlistModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"WaitlistModal\");","map":{"version":3,"names":["Formik","React","useEffect","useState","Button","Col","Form","FormControl","FormGroup","Modal","Row","userApiCallGet","userApiCallPost","ModalCustom","FormikControl","CustomModal","WaitlistModal","props","show","setShow","email","setEmail","waitListNo","setWaitListNo","handleShow","getValidationState","length","onSubmit","data","then","console","log","catch","error","joinshow","setJoinshow","croseClose","openShow","localStorage","setItem","onCancel","e","target","value"],"sources":["/home/eagle/Projects/bouldl/src/component/pages/private/Waitlist/WaitlistModal.js"],"sourcesContent":["import { Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Col, Form, FormControl, FormGroup, Modal, Row } from \"react-bootstrap\";\nimport { userApiCallGet, userApiCallPost } from \"../../../../Axios/User\";\nimport { ModalCustom } from \"../../../common\";\nimport FormikControl from \"../../../common/FormikControl\";\nimport CustomModal from \"../../../common/modalCustom/CustomModal\";\n\nimport \"./Waitlist.scss\";\n\nconst WaitlistModal = (props) => {\n\n  // const [count, setCount] = useState(0)\n  const [show, setShow] = useState(true);\n  const [email, setEmail] = useState(\"\");\n  const [waitListNo, setWaitListNo] = useState();\n \n\n  useEffect(() => {\n    handleShow();\n  }, []);\n \n\n  const getValidationState =()=>{\n  const length = email.length;\n\n  if (length<9) return 'error';\n  }\n\n  const onSubmit = () => {\n    let data = {\n      email: email,\n    };\n    userApiCallPost(\"/newsletter/register\", data, {}, \"toastOn\")\n      .then(async (data) => {\n        console.log(\"data\", data.data);\n        setWaitListNo(data.data);\n        setShow(false);\n        setEmail(\"\");\n        // openShow();\n      })\n      .catch((error) => {\n        setShow(false);\n      });\n   \n    console.log(\"email\", data);\n  };\n  const handleShow = () => setShow(true);\n\n  const [joinshow, setJoinshow] = useState(false);\n\n  const croseClose = () => setJoinshow(false);\n  const openShow = () => setJoinshow(true);\n  localStorage.setItem(\"attempts\",0);\n  const onCancel=()=>{\n    userApiCallGet(\"/newsletter/close\")\n    .then(async (data) => {\n      console.log(\"data\", data.data);\n     \n      setShow(false);\n    \n    })\n    .catch((error) => {\n      setShow(false);\n    });\n    \n  //   var attempts = parseInt(localStorage.getItem(\"attempts\"));\n  //   localStorage.setItem(\"count\", ++attempts);\n  //   console.log(attempts);\n  //  setCount(attempts)\n  // debugger;\n    }\n    // console.log(\"count\",count)\n    // localStorage.setItem(\"count\",count);\n    \n\n  return (\n    <>\n      {/* <Button variant=\"primary\" onClick={handleShow}>\n                Email Confirm\n            </Button> */}\n\n      <CustomModal\n        show={show}\n        onHide={onCancel}\n        centered\n        size=\"md\"\n        title={\"JOIN THE WAITLIST\"}\n        {...props}\n      >\n        <Row>\n          <Col lg={12}>\n            <div className=\"Wait_Email\">\n              <div className=\"containt\">\n                <p>\n                  To get the early access benefits\n                  {/* <br /> & <br />\n                  Stay in the loop */}\n                </p>\n               \n                \n             \n                  <form>\n                    \n                <Form.Group className=\"groupForm\"\n                controlId={\"id\"}\n                validationState={getValidationState}>\n                                    {/* <Form.Label>Email ID</Form.Label> */}\n                                    <Form.Control\n                                        type=\"email\"\n                                        label=\"Email ID\"\n                                        placeholder=\" Enter email Address\"\n                                        value={email}\n                                        onChange={(e)=>setEmail(e.target.value)}\n                                        required  \n                                        id=\"formControlsEmail\" \n                                        // isInvalid={\"kk\"} /                                    \n                                    />\n                                </Form.Group>\n                                {/* <FormGroup\n          controlId=\"formBasicText\"\n          validationState={validationSchema}\n        >\n          {/* <ControlLabel>Working example with validation</ControlLabel> */}\n                                {/* <FormControl\n            type=\"text\"\n            value={email}\n            placeholder=\"Enter email\"\n            onChange={(e)=>setEmail(e.target.value)}\n          />\n          <FormControl.Feedback />\n          {/* <HelpBlock>Validation is based on string length.</HelpBlock> */}\n        {/* </FormGroup>  */}\n\n                {/* <Form   className=\"groupForm\">\n                  <Form.Control\n                    value={email}\n                    required\n                    // onChange={handleChange}\n                    onChange={(e) => setEmail(e.target.value)}\n                    type=\"email\"\n                    placeholder=\"example@gmail.com\"\n                  /> */}\n\n                  <Button\n                    variant=\"primary\"\n                    disabled={email===\"\"}\n                   onClick={onSubmit}\n                //    type=\"button\"\n\n                    className=\"confbtn\"\n                  >\n                    Confirm\n                  </Button>\n                  </form>\n               \n                \n              </div>\n            </div>{\" \"}\n          </Col>\n        </Row>\n      </CustomModal>\n\n      {/* <Button variant=\"primary\" onClick={openShow}>\n                Joined\n            </Button> */}\n\n      <CustomModal\n        show={joinshow}\n        onHide={croseClose}\n        centered\n        size=\"md\"\n        title={\"YOU ARE AWESOME, SERIOUSLY!\"}\n        {...props}\n      >\n        <Row>\n          <Col lg={12}>\n            <div className=\"Wait_Email\">\n              <div className=\"containt\">\n                <p>\n                  You have joined the community of\n                  <br /> {waitListNo} <br />\n                  other members\n                </p>\n              </div>\n\n              <Button\n                variant=\"primary\"\n                onClick={croseClose}\n                className=\"confbtn\"\n              >\n                Close\n              </Button>\n            </div>\n          </Col>\n        </Row>\n      </CustomModal>\n    </>\n  );\n};\n\nexport default WaitlistModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}